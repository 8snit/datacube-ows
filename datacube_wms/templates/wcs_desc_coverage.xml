<?xml version='1.0' encoding="UTF-8" ?>
<CoverageDescription
            version="1.0.0"
            updateSequence="0"
            xmlns="http://www.opengis.net/wcs"
            xmlns:xlink="http://www.w3.org/1999/xlink"
            xmlns:gml="http://www.opengis.net/gml"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.opengis.net/wcs http://schemas.opengis.net/wcs/1.0.0/describeCoverage.xsd">
    {% for product in products %}
    <CoverageOffering>
        <name>{{ product.name }}</name>
        <label>{{ product.title }}</label>
        <description>{{  product.definition.description }}</description>
        <lonLatEnvelope srsName="urn:ogc:def:crs:OGC:1.3:CRS84">
            <gml:pos>{{ product.ranges.lon.min }} {{ product.ranges.lat.min }}</gml:pos>
            <gml:pos>{{ product.ranges.lon.max }} {{ product.ranges.lat.max }}</gml:pos>
            <gml:timePosition>{{ product.ranges.start_time.isoformat() }}</gml:timePosition>
            <gml:timePosition>{{ product.ranges.end_time.isoformat() }}</gml:timePosition>
        </lonLatEnvelope>

        <domainSet>
            <spatialDomain>
                <gml:Envelope srsName="{{ service.default_geographic_CRS }}">
                    <gml:pos>{{ product.ranges.lon.min }} {{ product.ranges.lat.min }}</gml:pos>
                    <gml:pos>{{ product.ranges.lon.max }} {{ product.ranges.lat.max }}</gml:pos>
                </gml:Envelope>
                <gml:RectifiedGrid dimension="2">
                    <gml:limits>
                        <gml:GridEnvelope>
                            <gml:low>0 0</gml:low>
                            <gml:high>{{ product.grid_high_x }} {{ product.grid_high_y }}</gml:high>
                        </gml:GridEnvelope>
                    </gml:limits>
                    <gml:axisName>{{ service.published_CRSs[product.native_CRS]["horizontal_coord"] }}</gml:axisName>
                    <gml:axisName>{{ service.published_CRSs[product.native_CRS]["vertical_coord"] }}</gml:axisName>
                    <gml:origin>
                        <gml:pos>{{ product.origin_x }} {{  product.origin_y }}</gml:pos>
                    </gml:origin>
                    <gml:offsetVector>{{ product.x_resolution }} 0</gml:offsetVector>
                    <gml:offsetVector>0 {{ product.y_resolution }}</gml:offsetVector>
                </gml:RectifiedGrid>
            </spatialDomain>
            <temporalDomain>
                {% for t in product.ranges.times %}
                    <gml:timePosition frame="#ISO-8601">{{ t.isoformat() }}</gml:timePosition>
                {%  endfor %}
            </temporalDomain>
        </domainSet>
        <rangeSet>
            <RangeSet>
                <name>Bands</name>
                <label>Bands/measurements</label>
                <axisDescription>
                    <AxisDescription>
                        <name>measurements</name>
                        <label>Bands/Channels/Samples</label>
                        <values>
                            {% for b in product.bands %}
                                <singleValue>{{ b }}</singleValue>
                            {% endfor %}
                        </values>
                    </AxisDescription>
                </axisDescription>
                <nullValues>
                    {% for nv in product.nodata_values %}
                    <singleValue>{{ nv }}</singleValue>
                    {% endfor %}
                </nullValues>
            </RangeSet>
        </rangeSet>
        <supportedCRSs>
            {% for crs in service.published_CRSs %}
                <requestResponseCRSs>{{ crs }}</requestResponseCRSs>
            {% endfor %}
            <nativeCRSs>{{ product.native_CRS }}</nativeCRSs>
        </supportedCRSs>
        <supportedFormats nativeFormat="{{ service.native_wcs_format }}">
            {% for fmt in service.wcs_formats %}
            <formats>{{ fmt }}</formats>
            {% endfor %}
        </supportedFormats>
        <supportedInterpolations default="nearest neighbor">
            <interpolationMethod>nearest neighbor</interpolationMethod>
        </supportedInterpolations>
    </CoverageOffering>
    {% endfor %}
</CoverageDescription>